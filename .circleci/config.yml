version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail
jobs:
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: aws s3 sync ./frontend s3://"cf-web-${CIRCLE_WORKFLOW_ID:0:7}" --delete
      - destroy_environment

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "create infra"
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name "cf-web-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides PipelineID="cf-web-${CIRCLE_WORKFLOW_ID:0:7}" 
      - destroy_environment

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: get the pipline_id
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > piplineID
      - save_cache:
          key: oldPipelineID
          paths:
            - /piplineID
  clean_old_frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - restore_cache:
          key: oldPipelineID
      - run:
          name: clean up the old cdn
          command: |
            aws s3 rm "s3://${cat OldPipelineID}" --recursive
            aws cloudformation delete-stack --stack-name "${oldPipelineID}"

workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
      - get_last_deployment_id:
          requires:
            - smoke_test
      - clean_old_frontend:
          requires:
            - get_last_deployment_id